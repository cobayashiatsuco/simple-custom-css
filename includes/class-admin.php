<?php
/**
 * The CSS Editor Admin Page.
 *
 * @author John Regan
 *
 * @package SimpleCustomCSS
 */

namespace SimpleCustomCSS;

// Prevent direct file access.
if ( ! defined( 'SCCSS_FILE' ) ) {
	die();
}

/**
 * Class Admin
 *
 * @package SimpleCustomCSS
 *
 * @since 3.5
 */
class Admin {
	/**
	 * The Option Name
	 */
	const OPTION = 'sccss_settings';

	/**
	 * The Content Setting
	 */
	const SETTING_CONTENT = 'sccss-content';

	/**
	 * URL of the Editor page in the admin
	 *
	 * @var string
	 */
	public $admin_url;

	/**
	 * URL of the Customizer Editor
	 *
	 * @var string
	 */
	public $customizer_url;

	/**
	 * The class instance
	 *
	 * @var object
	 */
	public static $instance;

	/**
	 * Admin constructor
	 *
	 * @since 3.5
	 */
	public function __construct() {

		$this->admin_url = admin_url( 'themes.php?page=simple-custom-css.php' );

		$this->customizer_url = add_query_arg(
			array(
				'autofocus[section]' => 'simple-custom-css-section',
			),
			admin_url( 'customize.php' )
		);

		add_filter( 'plugin_action_links_' . plugin_basename( SCCSS_FILE ), array( $this, 'settings_link' ) );
		add_filter( 'option_page_capability_sccss_settings_group', array( $this, 'filter_settings_page_capability' ) );
		add_action( 'plugins_loaded', array( $this, 'textdomain' ) );
		add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_scripts' ) );
		add_action( 'admin_menu', array( $this, 'register_submenu_page' ) );
		add_action( 'admin_init', array( $this, 'register_settings' ) );
	}

	/**
	 * Get the instance
	 *
	 * @since 3.5
	 *
	 * @return Admin|object
	 */
	public static function get_instance() {
		if ( ! isset( self::$instance ) ) {
			self::$instance = new self;
		}
		return self::$instance;
	}

	/**
	 * Print direct link to Custom CSS admin page
	 *
	 * Fetches array of links generated by WP Plugin admin page ( Deactivate | Edit )
	 * and inserts a link to the Custom CSS admin page
	 *
	 * @filter plugin_action_links_simple-custom-css
	 *
	 * @since  1.0
	 *
	 * @param array $links Array of links generated by WP in Plugin Admin page.
	 *
	 * @return array Array of links to be output on Plugin Admin page.
	 */
	function settings_link( $links ) {
		return array_merge(
			array(
				'settings' => '<a href="' . esc_url( $this->admin_url ) . '">' . __( 'Add CSS', 'simple-custom-css' ) . '</a>',
			),
			$links
		);
	}

	/**
	 * Register text domain
	 *
	 * @action plugins_loaded
	 *
	 * @since 1.0
	 */
	function textdomain() {
		load_plugin_textdomain( 'simple-custom-css', false, dirname( plugin_basename( SCCSS_FILE ) ) . '/languages/' );
	}

	/**
	 * Filter the capability for the Admin settings page
	 *
	 * Props to JakePT!
	 *
	 * @link https://github.com/JakePT
	 *
	 * @filter option_page_capability_sccss_settings_group
	 *
	 * @since 3.5
	 *
	 * @return string
	 */
	function filter_settings_page_capability() {
		return apply_filters( 'sccss_capability', 'edit_theme_options' );
	}

	/**
	 * Enqueues Scripts/Styles
	 *
	 * @action admin_enqueue_scripts
	 *
	 * @since  3.0
	 *
	 * @param  string $hook Hook of admin screen.
	 *
	 * @return void
	 */
	function enqueue_scripts( $hook ) {
		if ( 'appearance_page_simple-custom-css' !== $hook ) {
			return;
		}
		wp_register_style( 'sccss-codemirror-css', plugins_url( 'simple-custom-css/js/codemirror/codemirror.css' ) );
		wp_enqueue_style( 'sccss-codemirror-css' );

		wp_register_script( 'sccss-codemirror-js', plugins_url( 'simple-custom-css/js/codemirror/codemirror-css.min.js' ), array(), '20160806', true );
		wp_enqueue_script( 'sccss-codemirror-js' );

		wp_register_script( 'sccss-admin-js', plugins_url( 'simple-custom-css/js/admin.js' ), array( 'jquery', 'sccss-codemirror-js' ) );
		wp_enqueue_script( 'sccss-admin-js' );
	}

	/**
	 * Register "Custom CSS" submenu in "Appearance" Admin Menu
	 *
	 * @action admin_menu
	 *
	 * @since 1.0
	 */
	function register_submenu_page() {
		add_theme_page(
			__( 'Simple Custom CSS', 'simple-custom-css' ),
			__( 'Custom CSS', 'simple-custom-css' ),
			apply_filters( 'sccss_capability', 'edit_theme_options' ),
			basename( SCCSS_FILE ),
			array( $this, 'render_submenu_page' )
		);
	}

	/**
	 * Register settings
	 *
	 * @action admin_init
	 *
	 * @since 1.0
	 */
	function register_settings() {
		register_setting( 'sccss_settings_group', 'sccss_settings' );
	}

	/**
	 * Render Admin Menu page
	 *
	 * @since 1.0
	 */
	function render_submenu_page() {

		$options = get_option( self::OPTION );
		$content = isset( $options[ self::SETTING_CONTENT ] ) && ! empty( $options[ self::SETTING_CONTENT ] ) ? $options[ self::SETTING_CONTENT  ] : __( '/* Enter Your Custom CSS Below This Line */', 'simple-custom-css' );

		$customizer_link_text = sprintf(
			__( 'You can also preview your edits live by using Simple Custom CSS in the %s', 'simple-custom-css' ),
			'<a href="' . esc_url( $this->customizer_url ) . '">' . __( 'WP Customizer', 'simple-custom-css' ) . '</a>'
		);

		if ( isset( $_GET['settings-updated'] ) ) : ?>
			<div id="message" class="updated"><p><?php esc_html_e( 'Custom CSS updated successfully.', 'simple-custom-css' ); ?></p></div>
		<?php endif; ?>
		<div class="wrap">
			<h2 style="margin-bottom: 1em;"><?php esc_html_e( 'Simple Custom CSS', 'simple-custom-css' ); ?></h2>
			<form name="sccss-form" action="options.php" method="post" enctype="multipart/form-data">
				<?php settings_fields( 'sccss_settings_group' ); ?>
				<div id="templateside">
	
					<?php do_action( 'sccss-sidebar-top' ); ?>
	
					<p>
						<?php esc_html_e( 'Simple Custom CSS allows you to add your own styles or override the default CSS of a plugin or theme.', 'simple-custom-css' ) ?>
					</p>
					<p>
						<?php esc_html_e( 'To use, enter your custom CSS, then click "Update Custom CSS".  It\'s that simple!', 'simple-custom-css' ) ?>
					</p>
					<p>
						<?php echo wp_kses_post( $customizer_link_text ); ?>
					</p>
	
					<?php submit_button( __( 'Update Custom CSS', 'simple-custom-css' ), 'primary', 'submit', true ); ?>
					<?php do_action( 'sccss-sidebar-bottom' ); ?>
				</div>
	
				<div id="template">
	
					<?php do_action( 'sccss-form-top' ); ?>
	
					<p>
						<a href="<?php echo esc_url( $this->customizer_url ); ?>"><?php esc_html_e( 'Edit live in the Customizer' ); ?>&rarr;</a>
					</p>
	
					<div>
						<textarea cols="70" rows="30" name="sccss_settings[sccss-content]" id="<?php echo esc_html( self::OPTION . '[' . self::SETTING_CONTENT . ']' ); ?>" ><?php echo esc_html( $content ); ?></textarea>
					</div>
	
					<?php do_action( 'sccss-textarea-bottom' ); ?>
	
					<div>
						<?php submit_button( __( 'Update Custom CSS', 'simple-custom-css' ), 'primary', 'submit', true ); ?>
					</div>
	
					<?php do_action( 'sccss-form-bottom' ); ?>
				</div>
			</form>
		</div>
	<?php
	}
}

/**
 * Delete Options on Uninstall
 *
 * @since 1.1
 */
function sccss_uninstall() {
	delete_option( Admin::OPTION );
}
register_uninstall_hook( SCCSS_FILE, 'sccss_uninstall' );
